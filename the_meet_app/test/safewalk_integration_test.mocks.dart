// Mocks generated by Mockito 5.4.6 from annotations
// in the_meet_app/test/safewalk_integration_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:ui' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:the_meet_app/models/safe_button.dart' as _i8;
import 'package:the_meet_app/models/user_model.dart' as _i5;
import 'package:the_meet_app/providers/auth_provider.dart' as _i2;
import 'package:the_meet_app/providers/safe_button_provider.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AuthProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthProvider extends _i1.Mock implements _i2.AuthProvider {
  MockAuthProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get isAuthenticated => (super.noSuchMethod(
        Invocation.getter(#isAuthenticated),
        returnValue: false,
      ) as bool);

  @override
  bool get isInitialized => (super.noSuchMethod(
        Invocation.getter(#isInitialized),
        returnValue: false,
      ) as bool);

  @override
  bool get isVerified => (super.noSuchMethod(
        Invocation.getter(#isVerified),
        returnValue: false,
      ) as bool);

  @override
  bool get needsProfileSetup => (super.noSuchMethod(
        Invocation.getter(#needsProfileSetup),
        returnValue: false,
      ) as bool);

  @override
  Map<String, dynamic> get profileSetupData => (super.noSuchMethod(
        Invocation.getter(#profileSetupData),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<void> initializeAsync() => (super.noSuchMethod(
        Invocation.method(
          #initializeAsync,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  String determineUserType(String? email) => (super.noSuchMethod(
        Invocation.method(
          #determineUserType,
          [email],
        ),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.method(
            #determineUserType,
            [email],
          ),
        ),
      ) as String);

  @override
  _i3.Future<bool> signInWithEmail(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmail,
          [
            email,
            password,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> signUpWithEmail(
    String? email,
    String? password,
    String? name,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUpWithEmail,
          [
            email,
            password,
            name,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  void navigateToProfileSetup(
    String? userId,
    String? email,
    String? name,
    String? userType,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #navigateToProfileSetup,
          [
            userId,
            email,
            name,
            userType,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<bool> updateProfileForNewUser({
    required _i5.UserModel? updatedUser,
    required String? userType,
    required bool? isVerified,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfileForNewUser,
          [],
          {
            #updatedUser: updatedUser,
            #userType: userType,
            #isVerified: isVerified,
          },
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> signInWithGoogle() => (super.noSuchMethod(
        Invocation.method(
          #signInWithGoogle,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  void clearProfileSetupState() => super.noSuchMethod(
        Invocation.method(
          #clearProfileSetupState,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> refreshUserData() => (super.noSuchMethod(
        Invocation.method(
          #refreshUserData,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> updateProfile({
    String? displayName,
    String? photoURL,
    String? bio,
    List<String>? interests,
    String? school,
    String? major,
    String? graduationYear,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [],
          {
            #displayName: displayName,
            #photoURL: photoURL,
            #bio: bio,
            #interests: interests,
            #school: school,
            #major: major,
            #graduationYear: graduationYear,
          },
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> changeUserPassword(
    String? currentPassword,
    String? newPassword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeUserPassword,
          [
            currentPassword,
            newPassword,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> deleteUserAccount(String? password) => (super.noSuchMethod(
        Invocation.method(
          #deleteUserAccount,
          [password],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SafeButtonProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockSafeButtonProvider extends _i1.Mock
    implements _i7.SafeButtonProvider {
  MockSafeButtonProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i8.SafeButton> get safeButtons => (super.noSuchMethod(
        Invocation.getter(#safeButtons),
        returnValue: <_i8.SafeButton>[],
      ) as List<_i8.SafeButton>);

  @override
  bool get isListening => (super.noSuchMethod(
        Invocation.getter(#isListening),
        returnValue: false,
      ) as bool);

  @override
  bool get isRecordingButton => (super.noSuchMethod(
        Invocation.getter(#isRecordingButton),
        returnValue: false,
      ) as bool);

  @override
  int get remainingTime => (super.noSuchMethod(
        Invocation.getter(#remainingTime),
        returnValue: 0,
      ) as int);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i3.Future<void> startListening() => (super.noSuchMethod(
        Invocation.method(
          #startListening,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> stopListening() => (super.noSuchMethod(
        Invocation.method(
          #stopListening,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void startRecordingButton() => super.noSuchMethod(
        Invocation.method(
          #startRecordingButton,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void cancelRecording() => super.noSuchMethod(
        Invocation.method(
          #cancelRecording,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<void> addSafeButton(
    String? name,
    String? action,
    String? type,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSafeButton,
          [
            name,
            action,
            type,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> removeSafeButton(String? id) => (super.noSuchMethod(
        Invocation.method(
          #removeSafeButton,
          [id],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> updateSafeButton(_i8.SafeButton? button) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSafeButton,
          [button],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
